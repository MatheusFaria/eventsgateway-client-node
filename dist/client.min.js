!function(e){"function"==typeof define&&define.amd?define(e):e()}(function(){"use strict";function e(e,i){for(var n=0;i.length>n;n++){var t=i[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}require("grpc");var i=require("uuid/v4"),n=require("./config/default.json"),t=require("./lib/logger"),o=require("./producer");module.exports=function(){function r(e,i){if(function(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}(this,r),this.config=e||n,this.topic=i||this.config.kafkatopic,!this.topic)throw Error("no kafka topic informed");this.logger=t.child({source:"eventsgateway/client",topic:this.topic}),this.producer=new o.Sync(this.config,i)}var c,a,u;return c=r,(a=[{key:"sendToTopic",value:function(e,n,t){if(!e)throw Error("event name cannot be empty");if(!n)throw Error("topic cannot be empty");var o={id:i(),name:e,topic:n,props:t,timestamp:Date.now()},r=this.logger.child({operation:"sendToTopic",event:o});return r.debug("sending event"),this.producer.send(o,r)}},{key:"send",value:function(e,i){return this.sendToTopic(e,this.topic,i)}}])&&e(c.prototype,a),u&&e(c,u),r}()});
